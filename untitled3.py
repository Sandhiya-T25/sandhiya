# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eI7OPWK29JG7D6iOVF-EeiqQyUt9afXK
"""

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Image Gallery</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 20px;
      background-color: #f0f0f0;
    }

    h2 {
      text-align: center;
      margin-bottom: 20px;
    }

    .gallery {
      display: flex;
      flex-wrap: wrap;
      gap: 15px;
      justify-content: center;
    }

    .gallery img {
      width: 120px;
      height: 120px;
      object-fit: cover;
      border-radius: 8px;
      cursor: pointer;
      transition: transform 0.2s ease;
    }

    .gallery img:hover {
      transform: scale(1.05);
    }

    .fullscreen-overlay {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.9);
      justify-content: center;
      align-items: center;
      z-index: 9999;
    }

    .fullscreen-overlay img {
      max-width: 90%;
      max-height: 90%;
      border-radius: 12px;
    }

    .close-btn {
      position: absolute;
      top: 20px;
      right: 30px;
      font-size: 35px;
      color: white;
      cursor: pointer;
    }
  </style>
</head>
<body>

  <h2>Click on any image to view in full screen</h2>

  <div class="gallery">
    <img src="https://images.unsplash.com/photo-1503023345310-bd7c1de61c7d" onclick="openFullScreen(this.src)">
    <img src="https://images.unsplash.com/photo-1495567720989-cebdbdd97913" onclick="openFullScreen(this.src)">
    <img src="https://images.unsplash.com/photo-1519125323398-675f0ddb6308" onclick="openFullScreen(this.src)">
    <img src="https://images.unsplash.com/photo-1558981403-c5f9891c87fa" onclick="openFullScreen(this.src)">
    <img src="https://images.unsplash.com/photo-1533055640609-24b498cdfd22" onclick="openFullScreen(this.src)">
    <img src="https://images.unsplash.com/photo-1542273917363-3b1817f69a2d" onclick="openFullScreen(this.src)">
    <img src="https://images.unsplash.com/photo-1508610048659-a06b669e7a11" onclick="openFullScreen(this.src)">
    <img src="https://images.unsplash.com/photo-1540202404-c1d7be6d3cae" onclick="openFullScreen(this.src)">
    <img src="https://images.unsplash.com/photo-1610878180933-9ff0a1a0a8f0" onclick="openFullScreen(this.src)">
    <img src="https://images.unsplash.com/photo-1612831455542-11f7ce17f79f" onclick="openFullScreen(this.src)">
    <img src="https://images.unsplash.com/photo-1603987461475-a2c94299a27d" onclick="openFullScreen(this.src)">
    <img src="https://images.unsplash.com/photo-1589987607627-f56427bdbc9b" onclick="openFullScreen(this.src)">
    <img src="https://images.unsplash.com/photo-1611077493237-9c905f30d0e0" onclick="openFullScreen(this.src)">
    <img src="https://images.unsplash.com/photo-1519681393784-d120267933ba" onclick="openFullScreen(this.src)">
    <img src="https://images.unsplash.com/photo-1504198266285-165a04fbb1b8" onclick="openFullScreen(this.src)">
    <img src="https://images.unsplash.com/photo-1593642634443-44adaa06623a" onclick="openFullScreen(this.src)">
    <img src="https://images.unsplash.com/photo-1498050108023-c5249f4df085" onclick="openFullScreen(this.src)">
    <img src="https://images.unsplash.com/photo-1590608897129-79da88b7a37b" onclick="openFullScreen(this.src)">
    <img src="https://images.unsplash.com/photo-1603570419985-7ec0067cc31c" onclick="openFullScreen(this.src)">
    <img src="https://images.unsplash.com/photo-1542751110-97427bbecf20" onclick="openFullScreen(this.src)">
  </div>

  <div class="fullscreen-overlay" id="fullscreenOverlay" onclick="closeFullScreen()">
    <span class="close-btn" onclick="closeFullScreen()">&times;</span>
    <img id="fullscreenImage" src="" alt="Full Screen" />
  </div>

  <script>
    function openFullScreen(src) {
      document.getElementById('fullscreenOverlay').style.display = 'flex';
      document.getElementById('fullscreenImage').src = src;
    }

    function closeFullScreen() {
      document.getElementById('fullscreenOverlay').style.display = 'none';
    }
  </script>

</body>
</html>

from IPython.core.display import display, HTML
import os

html_code = """
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Image Gallery</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 20px;
      background-color: #f0f0f0;
    }

    h2 {
      text-align: center;
      margin-bottom: 20px;
    }

    .gallery {
      display: flex;
      flex-wrap: wrap;
      gap: 15px;
      justify-content: center;
    }

    .gallery img {
      width: 120px;
      height: 120px;
      object-fit: cover;
      border-radius: 8px;
      cursor: pointer;
      transition: transform 0.2s ease;
    }

    .gallery img:hover {
      transform: scale(1.05);
    }

    .fullscreen-overlay {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.9);
      justify-content: center;
      align-items: center;
      z-index: 9999;
    }

    .fullscreen-overlay img {
      max-width: 90%;
      max-height: 90%;
      border-radius: 12px;
    }

    .close-btn {
      position: absolute;
      top: 20px;
      right: 30px;
      font-size: 35px;
      color: white;
      cursor: pointer;
    }
  </style>
</head>
<body>

  <h2>Click on any image to view in full screen</h2>

  <div class="gallery">
    <!-- Only a few images for brevity; you can add more -->
    <img src="https://images.unsplash.com/photo-1503023345310-bd7c1de61c7d" onclick="openFullScreen(this.src)">
    <img src="https://images.unsplash.com/photo-1495567720989-cebdbdd97913" onclick="openFullScreen(this.src)">
    <img src="https://images.unsplash.com/photo-1519125323398-675f0ddb6308" onclick="openFullScreen(this.src)">
  </div>

  <div class="fullscreen-overlay" id="fullscreenOverlay" onclick="closeFullScreen()">
    <span class="close-btn" onclick="closeFullScreen()">&times;</span>
    <img id="fullscreenImage" src="" alt="Full Screen" />
  </div>

  <script>
    function openFullScreen(src) {
      document.getElementById('fullscreenOverlay').style.display = 'flex';
      document.getElementById('fullscreenImage').src = src;
    }

    function closeFullScreen() {
      document.getElementById('fullscreenOverlay').style.display = 'none';
    }
  </script>

</body>
</html>
"""

# Save to HTML file
with open("gallery.html", "w") as f:
    f.write(html_code)

# Display using IFrame
display(HTML('<iframe src="gallery.html" width="100%" height="600px"></iframe>'))

from IPython.display import Image, display
   import os

image_files = [f for f in os.listdir() if f.endswith(('.png', '.jpg', '.jpeg'))]

for image_file in image_files:
       display(Image(filename=image_file))

from IPython.display import Image, display
import os

# Get the list of image files
image_files = [f for f in os.listdir() if f.endswith(('.png', '.jpg', '.jpeg'))]

# Display the images
for image_file in image_files:
    display(Image(filename=image_file))

import os
from IPython.display import display, HTML
import urllib.request

# Create a directory for images
os.makedirs("images", exist_ok=True)

# List of a few image URLs
image_urls = [
    "https://images.unsplash.com/photo-1503023345310-bd7c1de61c7d",
    "https://images.unsplash.com/photo-1495567720989-cebdbdd97913",
    "https://images.unsplash.com/photo-1519125323398-675f0ddb6308"
]

# Download and save images
image_tags = ""
for idx, url in enumerate(image_urls):
    local_path = f"images/img{idx}.jpg"
    urllib.request.urlretrieve(url, local_path)
    image_tags += f'<img src="{local_path}" onclick="openFullScreen(this.src)">\n'

# Build HTML
html_code = f"""
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Image Gallery</title>
  <style>
    body {{
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 20px;
      background-color: #f0f0f0;
    }}
    h2 {{
      text-align: center;
      margin-bottom: 20px;
    }}
    .gallery {{
      display: flex;
      flex-wrap: wrap;
      gap: 15px;
      justify-content: center;
    }}
    .gallery img {{
      width: 120px;
      height: 120px;
      object-fit: cover;
      border-radius: 8px;
      cursor: pointer;
      transition: transform 0.2s ease;
    }}
    .gallery img:hover {{
      transform: scale(1.05);
    }}
    .fullscreen-overlay {{
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.9);
      justify-content: center;
      align-items: center;
      z-index: 9999;
    }}
    .fullscreen-overlay img {{
      max-width: 90%;
      max-height: 90%;
      border-radius: 12px;
    }}
    .close-btn {{
      position: absolute;
      top: 20px;
      right: 30px;
      font-size: 35px;
      color: white;
      cursor: pointer;
    }}
  </style>
</head>
<body>

  <h2>Click on any image to view in full screen</h2>
  <div class="gallery">
    {image_tags}
  </div>

  <div class="fullscreen-overlay" id="fullscreenOverlay" onclick="closeFullScreen()">
    <span class="close-btn" onclick="closeFullScreen()">&times;</span>
    <img id="fullscreenImage" src="" alt="Full Screen" />
  </div>

  <script>
    function openFullScreen(src) {{
      document.getElementById('fullscreenOverlay').style.display = 'flex';
      document.getElementById('fullscreenImage').src = src;
    }}
    function closeFullScreen() {{
      document.getElementById('fullscreenOverlay').style.display = 'none';
    }}
  </script>

</body>
</html>
"""

# Save and display the HTML
with open("gallery.html", "w") as f:
    f.write(html_code)

display(HTML('<iframe src="gallery.html" width="100%" height="600px"></iframe>'))

from IPython.core.display import display, HTML
import os

# List of all image files from your document
image_files = [
    "media/image1.jpeg", "media/image2.jpeg", "media/image3.jpeg",
    "media/image4.jpeg", "media/image5.png", "media/image6.jpeg",
    "media/image7.jpeg", "media/image8.jpeg", "media/image9.jpeg",
    "media/image10.jpeg", "media/image11.jpeg", "media/image12.jpeg",
    "media/image13.jpeg", "media/image14.jpeg", "media/image15.jpeg",
    "media/image16.jpeg", "media/image17.jpeg", "media/image18.jpeg",
    "media/image19.jpeg", "media/image20.jpeg", "media/image21.jpeg",
    "media/image22.jpeg", "media/image23.jpeg"
]

# Generate HTML for the gallery
html_code = """
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Handwriting Gallery</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 20px;
      background-color: #f5f5f5;
    }
    h1 {
      text-align: center;
      color: #333;
    }
    .gallery {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
      gap: 15px;
      padding: 20px;
    }
    .gallery-item {
      border-radius: 8px;
      overflow: hidden;
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
      transition: transform 0.3s;
      background: white;
    }
    .gallery-item:hover {
      transform: scale(1.03);
    }
    .gallery-item img {
      width: 100%;
      height: 200px;
      object-fit: cover;
      cursor: pointer;
    }
    .modal {
      display: none;
      position: fixed;
      z-index: 100;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0,0,0,0.9);
    }
    .modal-content {
      margin: auto;
      display: block;
      max-width: 90%;
      max-height: 90%;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }
    .close {
      position: absolute;
      top: 20px;
      right: 30px;
      color: white;
      font-size: 35px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <h1>Handwriting Examples Gallery</h1>
  <div class="gallery">
"""

# Add images to gallery
for img in image_files:
    html_code += f"""
    <div class="gallery-item">
      <img src="{img}" onclick="openModal(this)">
    </div>
    """

html_code += """
  </div>
  <div id="modal" class="modal">
    <span class="close" onclick="closeModal()">&times;</span>
    <img class="modal-content" id="modal-img">
  </div>
  <script>
    function openModal(img) {
      document.getElementById('modal').style.display = "block";
      document.getElementById('modal-img').src = img.src;
    }
    function closeModal() {
      document.getElementById('modal').style.display = "none";
    }
    window.onclick = function(event) {
      if (event.target == document.getElementById('modal')) {
        closeModal();
      }
    }
  </script>
</body>
</html>
"""

# Display in Jupyter
display(HTML(html_code))

import tkinter as tk
from tkinter import ttk
from PIL import ImageTk, Image
import os

class HandwritingGallery:
    def __init__(self, root):
        self.root = root
        self.root.title("Handwriting Examples Gallery")

        # List of images (update paths as needed)
        self.image_files = [
            "media/image1.jpeg", "media/image2.jpeg", "media/image3.jpeg",
            "media/image4.jpeg", "media/image5.png", "media/image6.jpeg",
            "media/image7.jpeg", "media/image8.jpeg", "media/image9.jpeg",
            "media/image10.jpeg", "media/image11.jpeg", "media/image12.jpeg",
            "media/image13.jpeg", "media/image14.jpeg", "media/image15.jpeg",
            "media/image16.jpeg", "media/image17.jpeg", "media/image18.jpeg",
            "media/image19.jpeg", "media/image20.jpeg", "media/image21.jpeg",
            "media/image22.jpeg", "media/image23.jpeg"
        ]

        # Create main container
        self.main_frame = ttk.Frame(root)
        self.main_frame.pack(fill=tk.BOTH, expand=True)

        # Create canvas with scrollbar
        self.canvas = tk.Canvas(self.main_frame)
        self.scrollbar = ttk.Scrollbar(self.main_frame, orient="vertical", command=self.canvas.yview)
        self.scrollable_frame = ttk.Frame(self.canvas)

        self.scrollable_frame.bind(
            "<Configure>",
            lambda e: self.canvas.configure(
                scrollregion=self.canvas.bbox("all")
            )
        )

        self.canvas.create_window((0, 0), window=self.scrollable_frame, anchor="nw")
        self.canvas.configure(yscrollcommand=self.scrollbar.set)

        self.canvas.pack(side="left", fill="both", expand=True)
        self.scrollbar.pack(side="right", fill="y")

        # Load and display thumbnails
        self.images = []
        self.photo_images = []

        for idx, img_path in enumerate(self.image_files):
            try:
                img = Image.open(img_path)
                img.thumbnail((200, 200))
                photo_img = ImageTk.PhotoImage(img)

                self.photo_images.append(photo_img)  # Keep reference

                btn = ttk.Button(
                    self.scrollable_frame,
                    image=photo_img,
                    command=lambda path=img_path: self.show_full_image(path)
                )
                btn.grid(row=idx//4, column=idx%4, padx=5, pady=5)
                self.images.append(img)
            except Exception as e:
                print(f"Error loading {img_path}: {e}")

    def show_full_image(self, img_path):
        top = tk.Toplevel(self.root)
        top.title(os.path.basename(img_path))

        try:
            img = Image.open(img_path)
            photo_img = ImageTk.PhotoImage(img)

            label = ttk.Label(top, image=photo_img)
            label.image = photo_img  # Keep reference
            label.pack()

            close_btn = ttk.Button(top, text="Close", command=top.destroy)
            close_btn.pack(pady=10)
        except Exception as e:
            print(f"Error displaying {img_path}: {e}")
            top.destroy()

if __name__ == "__main__":
    root = tk.Tk()
    root.geometry("900x700")
    app = HandwritingGallery(root)
    root.mainloop()

import os
from IPython.display import display

from IPython.display import display, HTML
import os

# HTML and CSS for the gallery
gallery_html = """
<style>
  .handwriting-gallery {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 15px;
    padding: 20px;
    background-color: #f9f9f9;
    border-radius: 10px;
    margin: 20px 0;
  }
  .gallery-item {
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    transition: transform 0.3s;
    background: white;
    position: relative;
  }
  .gallery-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 6px 12px rgba(0,0,0,0.15);
  }
  .gallery-item img {
    width: 100%;
    height: 200px;
    object-fit: contain;
    background: white;
    cursor: pointer;
    border-bottom: 1px solid #eee;
  }
  .image-info {
    padding: 10px;
    font-family: Arial, sans-serif;
    color: #555;
    font-size: 14px;
  }
  .modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.9);
    overflow: auto;
  }
  .modal-content {
    margin: auto;
    display: block;
    max-width: 90%;
    max-height: 90%;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  .close {
    position: absolute;
    top: 20px;
    right: 35px;
    color: #f1f1f1;
    font-size: 40px;
    font-weight: bold;
    transition: 0.3s;
    cursor: pointer;
  }
  .close:hover {
    color: #bbb;
  }
  .caption {
    margin: auto;
    display: block;
    width: 80%;
    max-width: 700px;
    text-align: center;
    color: #ccc;
    padding: 10px 0;
    font-family: Arial, sans-serif;
  }
</style>

<div class="handwriting-gallery" id="gallery-container">
  <!-- Images will be inserted here by JavaScript -->
</div>

<div id="image-modal" class="modal">
  <span class="close" onclick="closeModal()">&times;</span>
  <img class="modal-content" id="modal-image">
  <div class="caption" id="caption"></div>
</div>

<script>
// Image data - paths and alt text
const imageData = [
  {src: "media/image1.jpeg", alt: "Assignments, notes in beautiful and clear hand writing"},
  {src: "media/image2.jpeg", alt: "37 Beautiful Handwriting Examples"},
  {src: "media/image3.jpeg", alt: "Handwriting example from r/Handwriting"},
  {src: "media/image4.jpeg", alt: "Personal handwriting sample"},
  {src: "media/image5.png", alt: "Handwriting improvement request"},
  {src: "media/image6.jpeg", alt: "Filipino/Tagalog cursive handwriting"},
  {src: "media/image7.jpeg", alt: "Handwriting update"},
  {src: "media/image8.jpeg", alt: "Handwritten notes and letters"},
  {src: "media/image9.jpeg", alt: "Clean handwriting example"},
  {src: "media/image10.jpeg", alt: "Beautiful handwriting for assignments"},
  {src: "media/image11.jpeg", alt: "Attractive handwriting sample"},
  {src: "media/image12.jpeg", alt: "Beautiful cursive handwriting"},
  {src: "media/image13.jpeg", alt: "Cursive and Urdu handwriting"},
  {src: "media/image14.jpeg", alt: "Beautiful handwriting for notes"},
  {src: "media/image15.jpeg", alt: "Handwriting for notes and cards"},
  {src: "media/image16.jpeg", alt: "Typing handwritten notes"},
  {src: "media/image17.jpeg", alt: "Handwriting notes and letters"},
  {src: "media/image18.jpeg", alt: "Handwriting notes and letters"},
  {src: "media/image19.jpeg", alt: "Good cursive handwriting"},
  {src: "media/image20.jpeg", alt: "Calligraphy with normal gel pen"},
  {src: "media/image21.jpeg", alt: "More quotes written"},
  {src: "media/image22.jpeg", alt: "Dreams become reality handwriting"},
  {src: "media/image23.jpeg", alt: "Friendship quotes in cursive"}
];

// Create gallery items
const gallery = document.getElementById('gallery-container');
imageData.forEach((image, index) => {
  const item = document.createElement('div');
  item.className = 'gallery-item';
  item.innerHTML = `
    <img src="${image.src}" alt="${image.alt}" onclick="openModal(${index})">
    <div class="image-info">${image.alt.substring(0, 50)}${image.alt.length > 50 ? '...' : ''}</div>
  `;
  gallery.appendChild(item);
});

// Modal functions
let currentIndex = 0;
function openModal(index) {
  currentIndex = index;
  const modal = document.getElementById('image-modal');
  const modalImg = document.getElementById('modal-image');
  const caption = document.getElementById('caption');

  modal.style.display = "block";
  modalImg.src = imageData[index].src;
  caption.innerHTML = imageData[index].alt;
}

function closeModal() {
  document.getElementById('image-modal').style.display = "none";
}

// Keyboard navigation
document.addEventListener('keydown', function(event) {
  const modal = document.getElementById('image-modal');
  if (modal.style.display === "block") {
    if (event.key === 'Escape') {
      closeModal();
    } else if (event.key === 'ArrowLeft' && currentIndex > 0) {
      openModal(currentIndex - 1);
    } else if (event.key === 'ArrowRight' && currentIndex < imageData.length - 1) {
      openModal(currentIndex + 1);
    }
  }
});

// Close when clicking outside image
window.onclick = function(event) {
  const modal = document.getElementById('image-modal');
  if (event.target == modal) {
    closeModal();
  }
}
</script>
"""

# Display the gallery
display(HTML(gallery_html))